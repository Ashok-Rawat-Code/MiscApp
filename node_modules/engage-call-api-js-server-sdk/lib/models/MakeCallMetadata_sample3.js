"use strict";
/* istanbul ignore file */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MakeCallMetadata_sample3 = void 0;
var MakeCallMetadata_sample3;
(function (MakeCallMetadata_sample3) {
    /**
     * Optional. This parameter specifies which HTTP method should be used to request the URL to fetch the external EML document (if defined in Url parameter) once the call connects. Valid parameters are GET and POST. Default value is POST.
     */
    let Method;
    (function (Method) {
        Method["POST"] = "POST";
        Method["GET"] = "GET";
    })(Method = MakeCallMetadata_sample3.Method || (MakeCallMetadata_sample3.Method = {}));
    /**
     * Optional. This parameter specifies which HTTP method should be used to request the StatsCallback URL (if specified) when sending the call status event. Valid parameters are GET and POST. Default value is POST.
     */
    let StatusCallbackMethod;
    (function (StatusCallbackMethod) {
        StatusCallbackMethod["POST"] = "POST";
        StatusCallbackMethod["GET"] = "GET";
    })(StatusCallbackMethod = MakeCallMetadata_sample3.StatusCallbackMethod || (MakeCallMetadata_sample3.StatusCallbackMethod = {}));
    /**
     * Optional. This parameter specifies the call type in one of the following values: voice, video, or video-only. Default value is voice. Setting this parameter to video will initiate a multimedia call, however the call may be ended up as a voice or video-only call if the called party declined the other media type for some reason. Note: Currently 'video-only' is not supported
     */
    let Type;
    (function (Type) {
        Type["VOICE"] = "voice";
        Type["VIDEO"] = "video";
        Type["VIDEO_ONLY"] = "video-only";
    })(Type = MakeCallMetadata_sample3.Type || (MakeCallMetadata_sample3.Type = {}));
    /**
     * Optional. This parameter specifies which brige mode should be enabled when making a call to multiple destinations. Setting this value to 'none' will disable the bridge mode, which means Radisys EDP will treat them seperately as individual call. When making voice call to multiple destinations, you can set this value to 'audio' if you want to bridge all the parties in same audio mixer. When making video call to multiple destinations, you can set this value to either 'vas' or 'cpv' to bridge them in different video layout. Default value is 'audio'. This parameter should be ignored if only one destination is specified in To parameter. Note: Currently 'cpv' is not supported
     */
    let Bridge;
    (function (Bridge) {
        Bridge["NONE"] = "none";
        Bridge["AUDIO"] = "audio";
        Bridge["VAS"] = "vas";
        Bridge["CPV"] = "cpv";
    })(Bridge = MakeCallMetadata_sample3.Bridge || (MakeCallMetadata_sample3.Bridge = {}));
})(MakeCallMetadata_sample3 = exports.MakeCallMetadata_sample3 || (exports.MakeCallMetadata_sample3 = {}));
